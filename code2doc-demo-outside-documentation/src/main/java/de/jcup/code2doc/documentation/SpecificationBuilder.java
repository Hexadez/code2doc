/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
* 
*   http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.*/
package de.jcup.code2doc.documentation;

import de.jcup.code2doc.api.Architecture;
import de.jcup.code2doc.api.Concept;
import de.jcup.code2doc.api.UseCase;
import de.jcup.code2doc.core.Factory;
import de.jcup.code2doc.core.define.Specification;
import de.jcup.code2doc.documentation.architecture.ARCHITECTURE_01_SPECIFICATION;
import de.jcup.code2doc.documentation.architecture.ARCHITECTURE_10_DECORATORS;
import de.jcup.code2doc.documentation.architecture.ARCHITECTURE_20_EXTENSIONS;
import de.jcup.code2doc.documentation.concept.CONCEPT_CODE2DOC;
import de.jcup.code2doc.documentation.roles.Roles;
import de.jcup.code2doc.documentation.usecases._1_specification.UC_110_CREATE_SPECIFICATION__INSIDE;
import de.jcup.code2doc.documentation.usecases._1_specification.UC_120_CREATE_SPECIFICATION__OUTSIDE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_210_CREATE_CONCEPT;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_220_CREATE_USECASE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_230_CREATE_ARCHITECTURE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_240_CREATE_ROLE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_250_CREATE_CONSTRAINT;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_270_LINK_TO_USECASE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_271_LINK_TO_ARCHITECTURE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_272_LINK_TO_ROLE;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_273_LINK_TO_CONSTRAINT;
import de.jcup.code2doc.documentation.usecases._2_define_elements.UC_290_ADD_CONTENT;
import de.jcup.code2doc.documentation.usecases._3_rendering.UC_900_CREATE_PDF_OUTPUT;
import de.jcup.code2doc.documentation.usecases._3_rendering.UC_950_READ_PDF_OUTPUT;
/**
 * Eat your own dog food... via the uncomfortable and ugly approach (outside).
 * @author de-jcup
 *
 */
public class SpecificationBuilder {

	public Specification start() {
		/* @formatter:off */
		
		Specification spec = Factory.createEmptySpecification();
		
		spec.setTitle("Code2Doc documentation");
		spec.setAuthor("Albert", "Tregnaghi");
		spec.setLegalNotice("(c) 2015 Albert Tregnaghi, License under Apache License 2.0");
		spec.setPreface("This is the documentation of code2doc. It is generated by code2doc itself.<p>"
				+ "You can find the project under <a href='https://github.com/de-jcup/code2doc'>https://github.com/de-jcup/code2doc</a>.</p>"+
				"<p> </p>"+
				"There exists also a <a href='https://github.com/de-jcup/code2doc/wiki'>Wiki</a> containing a link to the last documentation output.");
		
		spec.
			/* concepts */
			addConcept(CONCEPT_CODE2DOC.class).
			
			/* architectures */
			addArchitecture(ARCHITECTURE_01_SPECIFICATION.class).
			addArchitecture(ARCHITECTURE_10_DECORATORS.class).
			addArchitecture(ARCHITECTURE_20_EXTENSIONS.class).
			
			/* use cases */
			addUseCaseAndDefine(UC_110_CREATE_SPECIFICATION__INSIDE.class).
				addTechInfo("Classes used inside specification does extend").
					addLinkToJava("Architecture parts", Architecture.class).
					addLinkToJava("Use cases", UseCase.class). 
					addLinkToJava("Concepts", Concept.class). 
				endTechInfo().
			endDefinition().
			
			addUseCaseAndDefine(UC_120_CREATE_SPECIFICATION__OUTSIDE.class).
				addTechInfo("Classes used inside specification does extend").
					addLinkToJava("Architecture parts", Architecture.class).
					addLinkToJava("Use cases", UseCase.class). 
					addLinkToJava("Concepts", Concept.class). 
				endTechInfo().
			endDefinition().
			
			addUseCase(UC_210_CREATE_CONCEPT.class).
			addUseCaseAndDefine(UC_220_CREATE_USECASE.class).
			endDefinition().
			addUseCase(UC_230_CREATE_ARCHITECTURE.class).
			addUseCaseAndDefine(UC_900_CREATE_PDF_OUTPUT.class).

			endDefinition().
			
			addUseCase(UC_240_CREATE_ROLE.class).
			addUseCase(UC_250_CREATE_CONSTRAINT.class).
			
			addUseCase(UC_270_LINK_TO_USECASE.class).
			addUseCase(UC_271_LINK_TO_ARCHITECTURE.class).
			addUseCase(UC_272_LINK_TO_ROLE.class).
			addUseCase(UC_273_LINK_TO_CONSTRAINT.class).
			
			addUseCase(UC_290_ADD_CONTENT.class).
			
			addUseCase(UC_900_CREATE_PDF_OUTPUT.class).
			addUseCase(UC_950_READ_PDF_OUTPUT.class).
			
			/* roles */
			addRole(Roles.DEVELOPER.class).
			addRole(Roles.DOCUMENT_READER.class)
			/* constraints - we got no constraints inside code2doc currently*/
			;

		/* @formatter:on */
		
		return spec;
	}
}